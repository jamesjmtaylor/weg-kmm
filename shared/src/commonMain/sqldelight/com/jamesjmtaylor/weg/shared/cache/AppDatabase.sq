import kotlin.collections.List;

CREATE TABLE search_result (
equipment_id INTEGER NOT NULL PRIMARY KEY,
title TEXT,
categories TEXT
);

insertResult:
INSERT OR REPLACE INTO search_result(title, equipment_id, categories)
VALUES(?,?,?);

selectResultByEquipmentId:
SELECT * FROM search_result
WHERE equipment_id = ?;

selectAllSearchResults:
SELECT search_result.*, image.*
FROM search_result
LEFT JOIN image ON image.equipment_id == search_result.equipment_id;

removeAllResults:
DELETE FROM search_result;

CREATE TABLE image (
equipment_id INTEGER NOT NULL,
name TEXT,
url TEXT
);

insertImage:
INSERT OR REPLACE INTO image(equipment_id, name, url)
VALUES(?,?,?);

selectImagesByEquipmentId:
SELECT * FROM image
WHERE equipment_id = ?;

removeAllImages:
DELETE FROM image;

CREATE TABLE search_result_details (
equipment_id INTEGER NOT NULL,
tiers TEXT,
notes TEXT,
date_of_introduction INTEGER,
country_of_origin TEXT,
proliferation TEXT
);

insertSearchResultDetails:
INSERT OR REPLACE INTO search_result_details(equipment_id, tiers, notes, date_of_introduction, country_of_origin, proliferation)
VALUES(?,?,?,?,?,?);

selectEquipmentDetailsByEquipmentId:
SELECT * FROM search_result_details
WHERE equipment_id = ?;

removeAllEquipmentDetails:
DELETE FROM search_result_details;

CREATE TABLE search_results_properties (
equipment_id INTEGER NOT NULL,
section_name TEXT,
properties_name TEXT,
properties_value TEXT
);

insertSearchResultProperties:
INSERT OR REPLACE INTO search_results_properties(equipment_id, section_name, properties_name, properties_value)
VALUES(?,?,?,?);

selectSearchResultPropertiesByEquipmentId:
SELECT * FROM search_results_properties
WHERE equipment_id = ?;

removeAllSearchResultProperties:
DELETE FROM search_results_properties;


CREATE TABLE page_progress (
equipment_type TEXT NOT NULL PRIMARY KEY,
page INTEGER NOT NULL
);

insertPageProgress:
INSERT OR REPLACE INTO page_progress(equipment_type, page)
VALUES(?,?);

selectPageProgressByEquipmentType:
SELECT * FROM page_progress
WHERE equipment_type = ?;

removeAllPageProgress:
DELETE FROM page_progress;





